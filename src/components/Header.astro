---
const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1); // remove the first "/"
---

<header
  class="fixed bg-transparent transition-all duration-700 ease-in-out z-10 w-full"
>
  <div class="flex flex-col mx-3 md:size-full md:mx-auto md:max-w-[75rem]">
    <nav id="header" class="py-2">
      <div class="flex flex-wrap justify-between py-4">
        <a href="/Seoforma" class="flex items-center md:mx-5">
          <img src="/logo.webp" alt="Seoforma logo" class="mr-3 h-6 sm:h-9" />
          <span
            class="self-center text-xl text-white font-semibold whitespace-nowrap"
          >
            SEOFORMA
          </span>
        </a>
        <button
          data-collapse-toggle="navbar-default"
          type="button"
          class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600 md:hidden"
          aria-controls="navbar-default"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <svg
            class="w-5 h-5"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 17 14"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M1 1h15M1 7h15M1 13h15"></path>
          </svg>
        </button>

        <div
          class="hidden w-full md:flex-1 md:justify-end md:block md:w-auto"
          id="navbar-default"
        >
          <ul
            class="font-medium flex flex-col p-4 mt-4 border border-gray-700 rounded-lg rtl:space-x-reverse md:flex-row md:bg-inherit md:justify-end bg-gray-800 md:mt-0 md:border-0 md:items-center md:h-full md:p-0"
          >
            <li class="md:mx-5">
              <a
                href="/"
                class={`${currentPath === "" ? "active" : ""} block py-2 px-3 text-white rounded hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white md:hover:bg-transparent md:hover:bg-gradient-to-r md:hover:from-lime-500 md:hover:via-green-400 md:hover:to-lime-500 md:border-0 md:p-0 md:hover:bg-clip-text md:hover:text-transparent sm:hover:text-black`}
                >INICIO</a
              >
            </li>
            <li class="md:mx-5">
              <a
                href="/about"
                class={`${currentPath === "about" ? "active" : ""} block py-2 px-3 text-white rounded hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white md:hover:bg-transparent md:hover:bg-gradient-to-r md:hover:from-lime-500 md:hover:via-green-400 md:hover:to-lime-500 md:border-0 md:p-0 md:hover:bg-clip-text md:hover:text-transparent sm:hover:text-black`}
                >NOSOTROS</a
              >
            </li>
            <li class="md:mx-5">
              <a
                href="/solutions"
                class={`${currentPath === "solutions" ? "active" : ""} block py-2 px-3 text-white rounded hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white md:hover:bg-transparent md:hover:bg-gradient-to-r md:hover:from-lime-500 md:hover:via-green-400 md:hover:to-lime-500 md:border-0 md:p-0 md:hover:bg-clip-text md:hover:text-transparent sm:hover:text-black`}
                >SOLUCIONES</a
              >
            </li>
            <li class="md:mx-5">
              <a
                href="/contact-us"
                class={`${currentPath === "contact-us" ? "active" : ""} block py-2 px-3 text-white rounded hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white md:hover:bg-transparent md:hover:bg-gradient-to-r md:hover:from-lime-500 md:hover:via-green-400 md:hover:to-lime-500 md:border-0 md:p-0 md:hover:bg-clip-text md:hover:text-transparent sm:hover:text-black`}
                >CONTACTO</a
              >
            </li>
          </ul>
        </div>
      </div>
    </nav>
  </div>

  <style>
    .active {
      background-image: linear-gradient(
        to right,
        #84cc16,
        #22c55e,
        #84cc16
      ); /* from lime-500, via green-400, to lime-500 */
      background-color: transparent;
      background-clip: text;
      -webkit-background-clip: text;
      color: transparent;
      font-weight: 1000;
    }
  </style>
</header>

<script>
  // Initialize Flowbite menu
  function initializeFlowbiteMenu() {
    const toggleButton = document.querySelector(
      '[data-collapse-toggle="navbar-default"]',
    );
    const menu = document.querySelector("#navbar-default");

    if (toggleButton && menu) {
      toggleButton.addEventListener("click", () => {
        console.log("toggleButton clicked");
        const isExpanded =
          toggleButton.getAttribute("aria-expanded") === "true";
        toggleButton.setAttribute("aria-expanded", String(!isExpanded));
        menu.classList.toggle("hidden");
      });
    }
  }

  // Initialize Flowbite menu on page load
  document.addEventListener("astro:page-load", () => {
    initializeFlowbiteMenu();
  });
  // Adjust header background on scroll
  document.addEventListener("scroll", function () {
    const header = document.querySelector("header");
    if (header) {
      if (window.scrollY > 50) {
        header.classList.add("backdrop-blur-xl", "shadow-custom");
      } else {
        header.classList.remove("backdrop-blur-xl", "shadow-custom");
      }
    }
  });

  // Adjust main content padding top to avoid header overlap
  function adjustMainContentSize() {
    const mainContent = document.getElementById("main-content");
    const header = document.querySelector("header");

    if (mainContent && header) {
      mainContent.style.paddingTop = `${header.offsetHeight}px`;
    }
  }

  // When scroll detected menu should be closed with transition smooth
  document.addEventListener("scroll", () => {
    const menu = document.querySelector("#navbar-default");
    if (menu) {
      menu.classList.add("hidden");
    }
  });

  function setObserver() {
    // Observe header changes
    const header = document.querySelector("header");
    const observer = new MutationObserver(() => {
      adjustMainContentSize();
    });

    // Observe header changes
    if (header) {
      observer.observe(header, {
        attributes: true,
        childList: true,
        subtree: true,
      });
    }
  }

  // Adjust main content size on page load
  document.addEventListener("astro:page-load", () => {
    adjustMainContentSize();
    setObserver();
  });
</script>
